// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile17 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile19 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile20 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile21 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile22 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile23 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass2], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`1e001e00020808080808080808080808080808080808080808080808080808080803011106060906060906060906060906060906060906060906060906060e05010512121212121212121212121212121212121212121212121212120105010512121515151515151515151515151515151515151515151515120105010c15151512151212121212121212121212121212121212121215120a05010515121215151215151812151515121515151215151515151215120105010515151215121215121512151215121512151215121212151215120105010c12151512151515121512151215121512151215151215151215120a05010512151212151212121515151215121512151212181212121215120105010512151215151215151515121215151512151515151215151215120105010c15151515181212121512151212121212121212151212151215120a05010515121512151515151212151515121515151515151212151215120105010515151512151212121212151215121512121212151515151215120105010c12121212151515121515171515121512151515151215121215120a0501051a151515151215121512121212121515151212151215121215120105010512151212121215121512161316121212151212151215121215120105010c12151212151515151512151515121512151215151215121215120a05010512151515121212121512151515121512121212121215121215120105010512151215151515151212121412121515171515151515151215120105010c18151212121212151215151915121212121512121212151215120a05010515121515151715151215121212151517151515151515151215120105010515151512151215121515151812151212121512121512151215120105010c15121215151215121512121517151215151515121512151215120a05010515121212121512151512151512151515121212121512151215120105010515151515151512151215151515151215121515151512151215120105010c12121212121212121212121212121212121212121212121215120a050105121b151515151515151515151515151515151515151515151512010501051212121212121212121212121212121212121212121212121212010501100d0d0b0d0d0b0d0d0b0d0d0b0d0d0b0d0d0b0d0d0b0d0d0b0d0d0f05070606060606060606060606060606060606060606060606060606060604`, img`
..............................
..............................
...2222222222222222222222222..
.222.......................2..
.2...2.2222222222222222222.2..
.2.22..2...2...2...2.....2.2..
.2..2.22.2.2.2.2.2.2.222.2.2..
.22..2...2.2.2.2.2.2..2..2.2..
.22.22.222...2.2.2.22.2222.2..
.22.2..2....22...2....2..2.2..
.2.....222.2.22222222.22.2.2..
.2.2.2....22...2......22.2.2..
.2...2.22222.2.2.2222....2.2..
.22222...2.....2.2....2.22.2..
.2.........22222...22.2.22.2..
.22.2222.2.....222.22.2.22.2..
.22.22.........2.2.2..2.22.2..
.22...2222.....2.222222.22.2..
.22.2.....222222.........2.2..
.2..22222.2....2222.2222.2.2..
.2.2......2.222..........2.2..
.2...2.2.2....2.222.22.2.2.2..
.2.22..2.2.22...2....2.2.2.2..
.2.2222.2..2..2...2222.2.2.2..
.2......2.2.....2.2....2.2.2..
.2222222222222222222222222.2..
..2........................2..
..22222222222222222222222222..
..............................
..............................
`, [myTiles.transparency16,sprites.dungeon.greenOuterEast1,sprites.dungeon.greenInnerNorthWest,sprites.dungeon.greenInnerNorthEast,sprites.dungeon.greenInnerSouthEast,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenInnerSouthWest,sprites.dungeon.greenOuterSouth1,sprites.dungeon.greenOuterNorth2,sprites.dungeon.greenOuterEast2,sprites.dungeon.greenOuterSouth2,sprites.dungeon.greenOuterWest2,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.floorLight0,sprites.dungeon.doorOpenNorth,sprites.dungeon.floorDarkDiamond,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.collectibleRedCrystal,myTiles.tile3,myTiles.tile4,sprites.dungeon.stairNorth,sprites.dungeon.collectibleInsignia,myTiles.tile5], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex`7d0008000000000000000000000000000002000007000000000500000000060000000000000000000007000000000000000000000000000300000000000007090007000007000006000700000000040000000000000b00000000060c0000000000000d00000000060000000000000101000000010000000000010000000000000e0000000000000000000000000002000000000000000500000000060000000000000000000000000000000000070000000000000300000000070000090000000700000706000000000000040000000000000b00000000060c0000000000000d00000000060000000000000100000000000100000001010000010000000e0000000000000000000000000002000000000000000501000000060000000000000000000000000000000000000000000000000300000000000007090007000000000006000700000000040000000000000b00000000060c0000000000000d00000000060000000000000100000000000000000000010000010000000e0000000000000000000000000002070000000000000501000000060000000000000000000000000000000000000000000000000300000000000000090101000007000706000000000000040000000000000b00000000060c0000000000000d00000000060000000000000100000000000000000000010000000000010e0a000000000000070000000000020000000000000005010f0000060000000000000000000000000000000000000000000000000300000000000700090101000700000006070000000000040000000000000b00000000060c0000000000000d00000000060000000000000000000000000100000000000000000000000e0000000000000000000000000002000000000000000501000000060000000000000007000000000000000000000000000008000300000000000000090101070000070006000007000000040000000000000b00000000060c0000000000000d00000000060000000000000000000001000100010000000001000000000e0000000000000000000000070002000000000000000500000000060000000000000000000000000000000000000000000000000300000000000700090101000700000006000000000000040000000000000b00000000060c0000000000000d00000000060000000000000000010000000100000100000000000000000e0000000000000000000000000002000007000000000500000000060000000000000000000000000007000000000000000000000300000000000007090101070007000706000700000000040000000000000b00000000060c0000000000000d00000000060000000000000000000000000100000000000000000001000e`, img`
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile1,myTiles.tile7,myTiles.tile8,myTiles.tile9,myTiles.tile10,myTiles.tile11,myTiles.tile12,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile13], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex`7d`, img`
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
.............................................................................................................................
`, [myTiles.transparency16,myTiles.tile12,myTiles.tile2,myTiles.tile18,myTiles.tile19,myTiles.tile20,myTiles.tile21,myTiles.tile22,myTiles.tile23], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile4":
            case "tile6":return tile6;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile5":
            case "tile7":return tile7;
            case "myTile6":
            case "tile8":return tile8;
            case "myTile7":
            case "tile9":return tile9;
            case "myTile8":
            case "tile10":return tile10;
            case "myTile10":
            case "tile12":return tile12;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile9":
            case "tile11":return tile11;
            case "myTile11":
            case "tile13":return tile13;
            case "myTile":
            case "tile1":return tile1;
            case "myTile12":
            case "tile14":return tile14;
            case "myTile13":
            case "tile15":return tile15;
            case "myTile14":
            case "tile16":return tile16;
            case "myTile15":
            case "tile17":return tile17;
            case "myTile17":
            case "tile19":return tile19;
            case "myTile16":
            case "tile18":return tile18;
            case "myTile18":
            case "tile20":return tile20;
            case "myTile19":
            case "tile21":return tile21;
            case "myTile20":
            case "tile22":return tile22;
            case "myTile21":
            case "tile23":return tile23;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
